<idea-plugin>
    <id>org.jetbrains.kotlin-js-inspection-pack-plugin</id>
    <name>Kotlin/JS Inspection Pack</name>
    <vendor email="viktor.noskin@jetbrains.com" url="http://www.jetbrains.com">JetBrains</vendor>

    <description><![CDATA[
    <h1>Kotlin/JS Inspection Pack</h1>
    <h2>Deprecation warning</h2>
    <p>All features of this plugin have been moved into the main IDEA Kotlin plugin, and will be available starting with IDEA 2023.1 (a.k.a IDEA platform 231), and further. These new IDEA versions will not, therefore, suggest installing of this plugin.</p>
    <p>You can still download and use the plugin with older IDEA versions.</p>
    <h2>Plugin description</h2>
    <p>
    This plugin adds useful inspections, intentions, and quick-fixes for working with Kotlin/JS projects. It provides
    helpful functionality when youâ€™re building new applications using Kotlin/JS, and it helps you migrate existing
    applications to the <a href="https://kotlinlang.org/docs/js-ir-compiler.html">Kotlin/JS IR compiler</a>.
    </p>
    <p>The following features are available with this plugin:</p>
    <ul>
        <li>Convert JS and React-related classes and interfaces to external interfaces</li>
    </ul>
    <p>
    Using Kotlin interfaces and classes (including data classes) that derive from pure JS classes, such as React's
    <b>RState</b> and <b>RProps</b>, can cause <b>ClassCastExceptions</b>. This plugin allows you to
    convert such classes and interfaces to external interfaces.
    </p>
    <ul>
        <li>Convert properties of external interfaces to var</li>
    </ul>
    <p>
    Properties of <a href="https://kotlinlang.org/docs/js-interop.html#external-interfaces">external interfaces</a>
     in Kotlin/JS code can't be read-only (val) properties.
    </p>
    <p>
    The plugin contains a quick-fix that allows you to convert the read-only properties of an external interface
    into mutable var properties.
    </p>
    <ul>
        <li>Make boolean properties nullable in external interfaces</li>
    </ul>
    <p>
    In JavaScript, a boolean variable can be null or undefined. Kotlin requires you to explicitly specify the
    nullability of boolean variables in external interfaces to prevent ClassCastExceptions.
    </p>
    <p>
    Now there is an inspection that will highlight boolean properties in external interfaces and offer to make
    them nullable (<b>Boolean?</b>).
    </p>
    <h2>Feedback</h2>
    <p>
    If you encounter any issues with the inspections in the plugin, please report them in our issue
    <a href="https://youtrack.jetbrains.com/newIssue?project=KT">tracker</a>.
    For problems with Kotlin/JS, please report them the same way.
    </p>
    <h2>Further reading</h2>
    <p>
    Take a look at this additional information on the <a href="https://kotlinlang.org/docs/js-ir-compiler.html">
    new Kotlin/JS IR backend</a>, and read the <a href="https://kotlinlang.org/docs/js-ir-migration.html#convert-js-and-react-related-classes-and-interfaces-to-external-interfaces">Kotlin/JS IR migration guide</a>.
    </p>
    ]]></description>
    <idea-version since-build="203"/>
    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.kotlin</depends>
    <depends>com.intellij.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <localInspection
                implementationClass="org.jetbrains.migration.inspections.NonExternalClassifierExtendingStateOrPropsInspection"
                bundle="messages.KotlinJSInspectionPackBundle"
                key="non.external.classifier.extending.state.or.props.name"
                groupPath="Kotlin,React"
                groupName="Probable bugs"
                enabledByDefault="true"
                level="WARNING"
                language="kotlin"
        />
        <localInspection
                implementationClass="org.jetbrains.migration.inspections.NonVarPropertyInExternalInterfaceInspection"
                bundle="messages.KotlinJSInspectionPackBundle"
                key="external.interface.contains.val.property.name"
                groupPath="Kotlin"
                groupName="Probable bugs"
                enabledByDefault="true"
                level="WARNING"
                language="kotlin"
        />
        <localInspection
                implementationClass="org.jetbrains.migration.inspections.NonNullableBooleanPropertyInExternalInterfaceInspection"
                bundle="messages.KotlinJSInspectionPackBundle"
                key="external.interface.contains.non.nullable.property.name"
                groupPath="Kotlin"
                groupName="Probable bugs"
                enabledByDefault="false"
                level="WARNING"
                language="kotlin"
        />
    </extensions>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>
